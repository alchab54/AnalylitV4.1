#!/bin/bash
# ================================================================
# üîç MONITORING WORKFLOW DYNAMIQUE - TIMESTAMP R√âEL
# ================================================================

echo "üîç MONITORING WORKFLOW MASSIF ATN"
echo "================================="
echo ""

echo "üìä STATUS CONTAINERS :"
docker-compose -f docker-compose.dev.yml ps --format "table {{.Name}}\t{{.Status}}\t{{.Ports}}" | grep -v "^NAME"

echo ""
echo "üéØ QUEUE STATUS :"
# Note: N√©cessite Python dans le PATH syst√®me
python3 -c "
import redis, datetime
try:
    r = redis.Redis(host='localhost', port=6380, db=0)
    queues = ['import_queue', 'screening_queue', 'extraction_queue', 'analysis_queue', 'synthesis_queue']
    for q in queues:
        count = r.llen(q)
        print(f'  {q}: {count} t√¢ches')
except Exception as e:
    print(f'  ‚ö†Ô∏è Redis non accessible: {str(e)[:50]}')
"

echo ""
echo "üíæ GPU MEMORY (si nvidia-smi disponible) :"
nvidia-smi --query-gpu=memory.used,memory.total,temperature.gpu --format=csv,noheader,nounits 2>/dev/null || echo "GPU non accessible"

echo ""
echo "‚è∞ TEMPS √âCOUL√â :"
# ‚úÖ CORRECTION: Utiliser heure actuelle syst√®me
start_time=$(date '+%Y-%m-%d %H:%M:%S')
echo "Heure actuelle: $start_time"

echo ""
echo "üéâ MONITORING DYNAMIQUE - TOUT EST SUIVI !"
echo "Prochaine v√©rification recommand√©e : dans 2-3h"
