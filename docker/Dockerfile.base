# ===================================================================
# == Dockerfile.base OPTIMISÉ avec Multi-Stage Builds ==
# ===================================================================
# Cette approche sépare les dépendances lourdes des légères pour
# maximiser l'utilisation du cache Docker et accélérer les builds.

# --- STAGE 1: Dépendances lourdes (PyTorch) ---
# Cette étape ne sera reconstruite que si les versions de PyTorch changent.
FROM python:3.11-slim AS heavy-deps
WORKDIR /deps
# Installer uniquement PyTorch et ses composants
RUN pip install --user torch==2.3.1 torchvision==0.18.1 torchaudio==2.3.1

# Définir le PATH pour inclure les binaires installés par pip
ENV PATH="/root/.local/bin:${PATH}"

# --- STAGE 2: Dépendances légères ---
# Cette étape dépend de la précédente et du reste de requirements.txt
FROM python:3.11-slim AS light-deps
WORKDIR /deps
# Copier les dépendances lourdes déjà installées
COPY --from=heavy-deps /root/.local /root/.local
# Copier le fichier de dépendances
COPY requirements.txt .
# Installer le reste des dépendances
RUN pip install --user -r requirements.txt

# Définir le PATH pour inclure les binaires installés par pip
ENV PATH="/root/.local/bin:${PATH}"

# --- STAGE 3: Image finale ---
# C'est l'image qui sera utilisée comme base pour les autres services.
FROM python:3.11-slim

RUN apt-get update && \
    apt-get install -y postgresql-client curl iproute2 && \
    rm -rf /var/lib/apt/lists/* && \
    useradd -m -s /bin/bash appuser

# Copier TOUTES les dépendances Python installées depuis l'étape précédente
COPY --from=light-deps /root/.local /home/appuser/.local
ENV PATH="/home/appuser/.local/bin:${PATH}"
ENV PYTHONPATH="/home/appuser/.local/lib/python3.11/site-packages"

# ✅ CORRECTION: Créer le répertoire de travail et les sous-dossiers en tant que root,
# puis assigner les bonnes permissions à appuser.
# Cela résout l'erreur "Permission denied" lors du build.
RUN mkdir -p /home/appuser/app && \
    mkdir -p /home/appuser/app/logs && \
    mkdir -p /home/appuser/app/projects && \
    chown -R appuser:appuser /home/appuser/app

WORKDIR /home/appuser/app
USER appuser
