# Fichier : docker-compose.yml (Version Corrigée)
version: '3.8'

services:
  base:
    build:
      context: .
      dockerfile: Dockerfile.base
    image: analylit-base

  db:
    image: postgres:15-alpine
    container_name: analylit_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./database/init-user-db.sql:/docker-entrypoint-initdb.d/init-user-db.sql
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5433:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: analylit_redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Le migrator se lance en parallèle, il ne bloque plus le démarrage du web
  migrator:
    build:
      context: .
      dockerfile: Dockerfile.migrator
    container_name: analylit_migrator
    command: >
      sh -c "./wait-for-it.sh db:5432 --timeout=60 -- flask db upgrade"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy # Il attend que la DB soit vraiment prête

  web:
    build:
      context: .
      dockerfile: Dockerfile.web
    container_name: analylit_web
    command: gunicorn --bind 0.0.0.0:5000 --workers 4 --threads 2 --worker-class gevent "app:create_app()"
    volumes:
      - .:/home/appuser/app
    ports:
      - "5001:5000"
    env_file:
      - .env
    # MODIFICATION CLÉ : On ne dépend PLUS du migrator !
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      base: {}

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: analylit_worker
    command: python -m rq_worker -w rq.worker.SimpleWorker -c app.rq_config
    volumes:
      - .:/home/appuser/app
    env_file:
      - .env
    # MODIFICATION CLÉ : On ne dépend PLUS du migrator !
    depends_on:
      redis:
        condition: service_healthy
      base: {}

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: analylit_nginx
    ports:
      # L'adresse est bien http://localhost:8000
      - "8000:80"
    depends_on:
      - web

volumes:
  postgres_data:
