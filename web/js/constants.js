// web/js/constants.js

// S√©lecteurs DOM centralis√©s
export const SELECTORS = {
    sections: '.section',
    navButtons: '.app-nav__button',
    connectionStatus: '[data-connection-status]',
    projectsList: '#projectsList',
    createProjectBtn: '#createProjectBtn',
    projectDetail: '#projectDetail',
    projectDetailContent: '#projectDetailContent',
    projectPlaceholder: '#projectPlaceholder',
    resultsContainer: '#resultsContainer',
    validationContainer: '#validationContainer',
    analysisContainer: '#analysisContainer',
    importContainer: '#importContainer',
    chatContainer: '#chatContainer',
    settingsContainer: '#settingsContainer',
    robContainer: '#robContainer',
    modalsContainer: '#modalsContainer',
    loadingOverlay: '#loadingOverlay',
    toastContainer: '#toastContainer',
    reportingContainer: '#reportingContainer',
    tasksContainer: '#tasksContainer',
    newProjectForm: '#newProjectForm',
    gridsContainer: '#gridsContainer',
    searchContainer: '#searchContainer',
    selectedArticles: '.article-checkbox:checked',
    analysisProgress: '#analysis-progress',
    analysisResults: '#analysis-results',
    settingsForm: '#profile-edit-form',
    ollamaModels: '#ollama-models-select',
    sidebar: '#sidebar',
    mainContent: '#main-content',
    loadingSpinner: '#loading-spinner'
};

// URLs API centralis√©es
export const API_ENDPOINTS = {
    // Projects
    projects: '/projects',
    projectById: (id) => `/projects/${id}`,
    projectExport: (id) => `/projects/${id}/export`,
    
    // Grids
    grids: (projectId) => `/projects/${projectId}/grids`,
    gridById: (projectId, gridId) => `/projects/${projectId}/grids/${gridId}`,

    // Articles
    articlesBatchDelete: '/articles/batch-delete',
    projectSearchResults: (id) => `/projects/${id}/search-results`,
    
    // Analyses
    projectExtractions: (id) => `/projects/${id}/extractions`,
    projectRun: (id) => `/projects/${id}/run`,
    
    // Settings
    analysisProfiles: '/analysis-profiles',
    analysisProfileById: (id) => `/analysis-profiles/${id}`,
    prompts: '/prompts',
    promptById: (id) => `/prompts/${id}`,
    ollamaModels: '/ollama/models',
    taskCancel: (id) => `/tasks/${id}/cancel`,
    taskRetry: (id) => `/tasks/${id}/retry`,
};
    
    // Queues
    queuesInfo: '/queues/info',
    queuesClear: '/queues/clear',

    // Databases
    databases: '/databases',
    projectPrismaChecklist: (id) => `/projects/${id}/prisma-checklist`,
    projectRunAnalysis: (id) => `/projects/${id}/run-analysis`,
    projectExportAnalyses: (id) => `/projects/${id}/export/analyses`,
};

// Messages d'√©tat
export const MESSAGES = {
    loading: 'Chargement en cours...', 
    // App
    appStart: 'üöÄ D√©marrage de AnalyLit V4.1 Frontend (Version am√©lior√©e)...',
    missingDOMElement: '√âl√©ments DOM critiques manquants:',
    errorUI: "Erreur : √©l√©ments d'interface manquants",
    appInitialized: (time) => `‚úÖ Application initialis√©e en ${time}ms`,
    initError: "‚ùå Erreur d'initialisation:",
    loadError: "Impossible de charger l'application. Rechargez la page.",
    initialDataLoaded: (time) => `üìä Donn√©es initiales charg√©es en ${time}ms`,
    initialDataError: 'Erreur chargement initial:',
    appStateLog: '√âtat de l'application:',
    debugInterface: 'üéØ Interface de debug disponible: window.AnalyLit',
    // Projets

    projectCreated: 'Projet cr√©√© avec succ√®s',
    projectDeleted: 'Projet supprim√©',
    projectNameRequired: 'Le nom du projet est requis.',
    creatingProject: 'Cr√©ation du projet...', 
    deletingProject: 'Suppression du projet...', 
    projectIdMissingForExport: "ID du projet manquant pour l'exportation.",
    projectExportStarted: "L'exportation du projet a commenc√©...",
    confirmDeleteProjectTitle: 'Confirmer la suppression',
    confirmDeleteProjectBody: (name) => `√ätes-vous s√ªr de vouloir supprimer le projet "<strong>${name}</strong>" ?`,
    // Articles
    loadingResults: 'Chargement des r√©sultats...', 
    noProjectSelected: 'Aucun projet s√©lectionn√©',
    selectProjectToViewResults: 'S√©lectionnez un projet pour voir les r√©sultats de recherche.',
    errorLoadingResults: 'Erreur de chargement des r√©sultats.',
    articleNotFound: 'Article introuvable',
    articleDetailsTitle: "D√©tails de l'article",
    noArticleSelected: 'Aucun article s√©lectionn√©',
    confirmDeleteArticles: (count) => `Supprimer ${count} article(s) s√©lectionn√©(s) ?`,
    deleteStarted: (jobId) => `Suppression lanc√©e (Job ID: ${jobId})`,
    batchProcessModalTitle: 'Lancer le Screening par Lot',
    screeningStarted: (count) => `Lancement du screening pour ${count} article(s)...`,
    screeningTaskStarted: 'T√¢che de screening lanc√©e en arri√®re-plan.',
    noArticleToExtract: "Aucun article n'a √©t√© marqu√© comme 'Inclus' pour l'extraction.",
    fullExtractionModalTitle: 'Extraction Compl√®te',
    noGridSelectedForExtraction: "Veuillez s√©lectionner une grille d'extraction",
    extractionStarted: (count) => `Lancement de l'extraction pour ${count} article(s)...`,
    extractionTaskStarted: 'Extraction compl√®te lanc√©e en arri√®re-plan.',
    noProjects: 'Aucun projet trouv√©. Cr√©ez-en un pour commencer !',
    noArticles: 'Aucun article dans ce projet.',
    // Analyses
    analysisStarted: 'Analyse lanc√©e avec succ√®s',
    selectProjectToViewAnalyses: 'S√©lectionnez un projet pour voir les analyses.',
    errorLoadingAnalyses: 'Erreur lors du chargement des analyses',
    savingPrisma: 'Sauvegarde PRISMA...',
    prismaSaved: 'Progression PRISMA sauvegard√©e.',
    prismaExportNotImplemented: 'Export PRISMA non impl√©ment√©.',
    atnAnalysisStarted: "Lancement de l'analyse ATN...",
    atnAnalysisJobStarted: (jobId) => `Analyse ATN lanc√©e (Job ID: ${jobId})`,
    selectProjectFirst: 'Veuillez d\'abord s√©lectionner un projet.',
    startingAnalysis: (type) => `Lancement de la g√©n√©ration pour ${type}...`,
    unknownAnalysisType: "Type d'analyse inconnu.",
    analysisJobStarted: (type, jobId) => `La g√©n√©ration pour ${type} a √©t√© lanc√©e (Job: ${jobId}).`,
    analysisStartedSimple: (type) => `La g√©n√©ration pour ${type} a √©t√© lanc√©e.`,
    errorStartingAnalysis: "Erreur lors du lancement de l'analyse",
    advancedAnalysisModalTitle: 'Lancer une Analyse Avanc√©e',
    startingMetaAnalysis: 'Lancement de la m√©ta-analyse...', 
    metaAnalysisStarted: 'M√©ta-analyse lanc√©e avec succ√®s.',
    startingDescriptiveStats: 'Calcul des statistiques descriptives...', 
    descriptiveStatsStarted: 'Calcul des statistiques lanc√©.',
    selectProjectToExportAnalyses: 'Veuillez s√©lectionner un projet pour exporter les analyses.',
    preparingExport: "Pr√©paration de l'exportation...",
    analysisExportStarted: "L'exportation des analyses a commenc√©.",
    errorExportingAnalyses: "Erreur d'exportation",
};

export const CONFIG = {
    API_BASE_URL: 'http://localhost:8080/api',
    WEBSOCKET_URL: '/',
    LOCAL_STORAGE_LAST_SECTION: 'analylit_last_section',
};
    // Settings
    errorLoadingPrompts: 'Erreur chargement prompts',
    loadingSettingsData: 'Chargement des donn√©es de configuration...', 
    settingsDataNotReady: "Les donn√©es des param√®tres ne sont pas pr√™tes, le rendu est annul√©.",
    noAnalysisProfileFound: 'Aucun profil d'analyse trouv√©.',
    refreshingQueuesStatus: "Rafra√Æchissement du statut des files...",
    noPromptTemplateFound: 'Aucun mod√®le de prompt trouv√©.',
    noOllamaModelFound: 'Aucun mod√®le Ollama trouv√©',
    aceNotLoaded: "La biblioth√®que Ace n'a pas pu √™tre charg√©e.",
    aceRetry: "Ace non charg√©. Nouvel essai dans 100ms.",
    aceInitError: (type) => `Impossible d'initialiser l'√©diteur Ace pour ${type}.`,
    cannotDeleteDefaultProfile: "Impossible de supprimer le profil par d√©faut.",
    deleteThisProfile: "Supprimer ce profil",
    templateApplied: (name, type) => `Mod√®le '${name}' appliqu√© aux √©diteurs '${type}'.`,
    cannotApplyTemplate: `Impossible de d√©terminer √† quel √©diteur ce mod√®le s'applique. Veuillez s√©lectionner un onglet.`,
    saving: 'Sauvegarde...', 
    profileSaved: (name) => `Profil '${name}' sauvegard√©.`,
    errorSavingProfile: "Erreur lors de la sauvegarde du profil:",
    cannotDeleteProfile: "Impossible de supprimer ce profil (d√©faut ou non s√©lectionn√©).",
    confirmProfileDeleteTitle: 'Confirmer la suppression',
    confirmProfileDeleteBody: (name) => `√ätes-vous s√ªr de vouloir supprimer d√©finitivement le profil "${name}" ?`,
    deleteButton: 'Supprimer',
    profileDeleted: (name) => `Profil "${name}" supprim√©.`,
    errorDeletingProfile: "Erreur lors de la suppression du profil:",
    clearQueueTitle: 'Vider la file d\'attente',
    confirmClearQueueBody: (name) => `√ätes-vous s√ªr de vouloir vider la file "${name}" ? Toutes les t√¢ches en attente seront perdues.`,
    clearButton: 'Vider',
    queueCleared: (name) => `La file "${name}" a √©t√© vid√©e.`,
    promptSaved: 'Mod√®le de prompt sauvegard√©.',
    selectNotFound: "L'√©l√©ment select 'available-models-select' est introuvable.",
    modelListNotFound: "Erreur : Impossible de trouver la liste des mod√®les.",
    modelDownloaded: (name) => `Mod√®le ${name} t√©l√©charg√© avec succ√®s`,
    unknownError: 'Erreur inconnue',
    downloadError: 'Erreur t√©l√©chargement',
    downloadingModel: (name) => `T√©l√©chargement de ${name}...`,

    // Grids
    errorLoadingGrids: 'Erreur lors du chargement des grilles.',
    selectProjectToViewGrids: 'S√©lectionnez un projet pour voir ses grilles.',
    noCustomGrids: 'Aucune grille personnalis√©e.',
    confirmDeleteGrid: 'Supprimer cette grille ?',
    gridDeleted: 'Grille supprim√©e.',
    editGridTitle: 'Modifier la Grille',
    createGridTitle: 'Cr√©er une Nouvelle Grille',
    invalidJsonFile: 'Veuillez s√©lectionner un fichier .json valide.',
    gridImported: 'Grille import√©e avec succ√®s.',
    gridNameAndFieldRequired: 'Le nom de la grille et au moins un champ sont requis.',
    gridSaved: (isUpdate) => `Grille ${isUpdate ? 'mise √† jour' : 'cr√©√©e'} avec succ√®s.`,
    errorSavingGrid: 'Erreur lors de la sauvegarde de la grille',
};