// Sélecteurs DOM centralisés
export const SELECTORS = {
    // Projets
    projectsList: '#projects-list',
    projectContainer: '#projects-container',
    createProjectBtn: '#create-project-btn',
    
    // Articles
    articleTableBody: '#article-table-body',
    articleContainer: '#articles-container',
    selectedArticles: '.article-checkbox:checked',
    selectedCount: '#selected-articles-count',
    batchProcessBtn: '#batch-process-btn',
    deleteSelectedBtn: '#delete-selected-btn',
    selectAllArticlesCheckbox: '#select-all-articles-checkbox',
    toggleArticleSelection: '[data-action="toggle-article-selection"]',

    // Analyses
    analysisContainer: '#analysis-container',
    analysisProgress: '#analysis-progress',
    analysisResults: '#analysis-results',
    analysisResultContainer: '#analysis-result-container',
    knowledgeGraphContainer: '#knowledge-graph-container',

    // Paramètres
    settingsContainer: '#settings-container',
    settingsForm: '#settings-form',
    ollamaModels: '#ollama-models-select',
    profileListContainer: '#profile-list-container',
    newProfileBtn: '#new-profile-btn',
    deleteProfileBtn: '#delete-profile-btn',
    applyTemplateBtn: '#apply-template-btn',
    promptTemplateSelect: '#prompt-template-select',
    refreshQueuesBtn: '#refresh-queues-btn',
    profileId: '#profile-id',
    profileName: '#profile-name',
    profileDescription: '#profile-description',
    profileIsDefault: '#profile-is-default',
    promptTemplatesList: '#prompt-templates-list',
    queueStatusContainer: '#queue-status-container',
    availableModelsSelect: '#available-models-select',
    downloadProgress: '#download-progress',
    downloadProgressBar: '#download-progress-bar',
    downloadStatus: '#download-status',
    installedModelsList: '#installed-models-list',
    modelSelects: '.model-select',

    // Grids
    gridsContainer: '#grids-container',
    gridFormModal: '#grid-form-modal',
    gridFormModalTitle: '#grid-form-modal-title',
    gridForm: '#grid-form',
    gridFields: '#grid-fields',
    gridId: '#grid-id',
    gridName: '#grid-name',
    gridDescription: '#grid-description',
    gridFieldItem: '.grid-field-item',
    gridFieldName: '.grid-field-name',
    gridFieldDesc: '.grid-field-desc',
    gridImportInput: '#grid-import-input',

    // UI
    loadingSpinner: '#loading-spinner',
    modal: '.modal',
    modalTitle: '.modal-title',
    modalBody: '.modal-body',
    modalClose: '[data-action="close-modal"]',
    confirmModal: '#confirm-modal',
    confirmModalTitle: '#confirm-modal-title',
    confirmModalBody: '#confirm-modal-body',
    confirmModalConfirmBtn: '#confirm-modal-confirm-btn',
    confirmModalCancelBtn: '#confirm-modal-cancel-btn',

    // Import
    importPmidInput: '#import-pmid-input',
    importPmidBtn: '#import-pmid-btn',
    importZoteroFile: '#import-zotero-file',
    importZoteroBtn: '#import-zotero-btn',
    zoteroUserId: '#zotero-user-id',
    zoteroApiKey: '#zotero-api-key',
    saveZoteroSettingsBtn: '#save-zotero-settings-btn',
    pdfUploadInput: '#pdf-upload-input',
    pdfUploadBtn: '#pdf-upload-btn',

    // Screening
    screeningTableBody: '#screening-table-body',
    screeningArticleCount: '#screening-article-count',
    screeningIncludeBtn: '#screening-include-btn',
    screeningExcludeBtn: '#screening-exclude-btn',
    screeningMaybeBtn: '#screening-maybe-btn',
    screeningCurrentArticleTitle: '#screening-current-article-title',
    screeningCurrentArticleAbstract: '#screening-current-article-abstract',
    screeningCurrentArticleId: '#screening-current-article-id',
    screeningCurrentArticleDoi: '#screening-current-article-doi',
    screeningCurrentArticleAuthors: '#screening-current-article-authors',
    screeningCurrentArticleJournal: '#screening-current-article-journal',
    screeningCurrentArticleDate: '#screening-current-article-date',
    screeningCurrentArticlePdfLink: '#screening-current-article-pdf-link',
    screeningCurrentArticleRobStatus: '#screening-current-article-rob-status',
    screeningCurrentArticleRobScore: '#screening-current-article-rob-score',
    screeningCurrentArticleRobJustification: '#screening-current-article-rob-justification',
    screeningCurrentArticleRobDetails: '#screening-current-article-rob-details',

    // Reporting
    bibliographyOutput: '#bibliography-output',
    summaryTableOutput: '#summary-table-output',
    prismaChecklistOutput: '#prisma-checklist-output',
    prismaChecklistContent: '#prisma-checklist-content',

    // RoB
    robAssessmentForm: '#rob-assessment-form',
    robArticleTitle: '#rob-article-title',
    robArticleId: '#rob-article-id',
    robDomainInputs: '.rob-domain-input',
    robOverallInput: '#rob-overall-input',
    robSaveBtn: '#rob-save-btn',
    robRunAnalysisBtn: '#rob-run-analysis-btn',

    // Chat
    chatMessagesContainer: '#chat-messages-container',
    chatInput: '#chat-input',
    chatSendBtn: '#chat-send-btn',
    chatLoadingSpinner: '#chat-loading-spinner',
    chatHistory: '#chat-history',

    // General
    resultsContainer: '#results-container',
    validationContainer: '#validation-container',
    importContainer: '#import-container',
    appNav: '.app-nav',
    appNavButton: '.app-nav__button',
    appNavButtonActive: '.app-nav__button--active',
    mainContent: '#main-content',
    sidebar: '#sidebar',
    themeToggle: '#theme-toggle',
    ollamaModelsSelect: '#ollama-models-select',
    analysisProfileSelect: '#analysis-profile-select',
    extractionGridSelect: '#extraction-grid-select',
};

// URLs API centralisées
export const API_ENDPOINTS = {
    projects: '/api/projects',
    projectById: (id) => `/api/projects/${id}`,
    articles: '/api/articles',
    articlesBatchDelete: '/api/articles/batch-delete',
    analyses: '/api/analyses',
    settings: '/api/settings',
    models: '/api/settings/models',
    ollamaModels: '/api/ollama/models',
    ollamaPull: '/api/ollama/pull',
    analysisProfiles: '/api/analysis-profiles',
    analysisProfileById: (id) => `/api/analysis-profiles/${id}`,
    prompts: '/api/prompts',
    promptById: (id) => `/api/prompts/${id}`,
    queuesInfo: '/api/queues/info',
    queuesClear: '/api/queues/clear',
    projectSearchResults: (projectId) => `/api/projects/${projectId}/search-results`,
    projectExtractions: (projectId) => `/api/projects/${projectId}/extractions`,
    projectRun: (projectId) => `/api/projects/${projectId}/run`,
    projectRunAnalysis: (projectId) => `/api/projects/${projectId}/run-analysis`,
    grids: (projectId) => `/api/projects/${projectId}/grids`,
    gridById: (projectId, gridId) => `/api/projects/${projectId}/grids/${gridId}`,
    gridImport: (projectId) => `/api/projects/${projectId}/grids/import`,
};

// Messages d'état
export const MESSAGES = {
    loading: 'Chargement en cours...', 
    noProjects: 'Aucun projet trouvé. Créez-en un pour commencer !', 
    noArticles: 'Aucun article dans ce projet.', 
    analysisStarted: 'Analyse lancée avec succès', 
    projectCreated: 'Projet créé avec succès', 
    projectDeleted: 'Projet supprimé', 
    loadingResults: 'Chargement des résultats...', 
    noProjectSelected: 'Aucun projet sélectionné', 
    selectProjectToViewResults: 'Sélectionnez un projet pour voir les résultats de recherche.', 
    errorLoadingResults: 'Erreur de chargement des résultats.', 
    noArticlesFoundTitle: 'Aucun article trouvé', 
    noArticlesFoundText: 'Lancez une recherche pour commencer à collecter des articles.', 
    articleNotFound: 'Article introuvable', 
    articleDetailsTitle: "Détails de l'article", 
    noArticleSelected: 'Aucun article sélectionné', 
    confirmDeleteArticles: (count) => `Supprimer ${count} article(s) sélectionné(s) ?`, 
    deleteStarted: (jobId) => `Suppression lancée (Job ID: ${jobId})`, 
    batchProcessModalTitle: 'Lancer le Screening par Lot', 
    screeningStarted: (count) => `Lancement du screening pour ${count} article(s)...`, 
    screeningTaskStarted: 'Tâche de screening lancée en arrière-plan.', 
    noArticleToExtract: "Aucun article n'a été marqué comme 'Inclus' pour l'extraction.", 
    fullExtractionModalTitle: 'Extraction Complète', 
    noGridSelectedForExtraction: "Veuillez sélectionner une grille d'extraction", 
    extractionStarted: (count) => `Lancement de l'extraction pour ${count} article(s)...`, 
    extractionTaskStarted: 'Extraction complète lancée en arrière-plan.', 
    selectProjectToViewAnalyses: 'Sélectionnez un projet pour voir les analyses.', 
    errorLoadingAnalyses: 'Erreur lors du chargement des analyses', 
    savingPrisma: 'Sauvegarde PRISMA...', 
    prismaSaved: 'Progression PRISMA sauvegardée.', 
    prismaExportNotImplemented: 'Export PRISMA non implémenté.', 
    atnAnalysisStarted: "Lancement de l'analyse ATN...", 
    atnAnalysisJobStarted: (jobId) => `Analyse ATN lancée (Job ID: ${jobId})`, 
    selectProjectFirst: 'Veuillez d\'abord sélectionner un projet.', 
    startingAnalysis: (type) => `Lancement de la génération pour ${type}...`, 
    unknownAnalysisType: "Type d'analyse inconnu.", 
    analysisJobStarted: (type, jobId) => `La génération pour ${type} a été lancée (Job: ${jobId}).`, 
    analysisStartedSimple: (type) => `La génération pour ${type} a été lancée.`, 
    errorStartingAnalysis: "Erreur lors du lancement de l'analyse", 
    advancedAnalysisModalTitle: 'Lancer une Analyse Avancée', 
    startingMetaAnalysis: 'Lancement de la méta-analyse...', 
    metaAnalysisStarted: 'Méta-analyse lancée avec succès.', 
    startingDescriptiveStats: 'Calcul des statistiques descriptives...', 
    descriptiveStatsStarted: 'Calcul des statistiques lancé.', 
    selectProjectToExportAnalyses: 'Veuillez sélectionner un projet pour exporter les analyses.', 
    preparingExport: "Préparation de l'exportation...", 
    analysisExportStarted: "L'exportation des analyses a commencé.", 
    errorExportingAnalyses: "Erreur d'exportation", 
    noDataForGraph: 'Aucune donnée pour le graphe. Lancez l\'analyse pour le générer.', 
    graphStats: (nodes, edges) => `${nodes} noeuds et ${edges} relations.`, 
    errorLoadingPrompts: 'Erreur chargement prompts', 
    loadingSettingsData: 'Chargement des données de configuration...', 
    settingsDataNotReady: "Les données des paramètres ne sont pas prêtes, le rendu est annulé.", 
    noAnalysisProfileFound: 'Aucun profil d\'analyse trouvé.', 
    refreshingQueuesStatus: "Rafraîchissement du statut des files...", 
    noPromptTemplateFound: 'Aucun modèle de prompt trouvé.', 
    noOllamaModelFound: 'Aucun modèle Ollama trouvé', 
    aceNotLoaded: "La bibliothèque Ace n'a pas pu être chargée.", 
    aceRetry: "Ace non chargé. Nouvel essai dans 100ms.", 
    aceInitError: (type) => `Impossible d'initialiser l'éditeur Ace pour ${type}.`, 
    cannotDeleteDefaultProfile: "Impossible de supprimer le profil par défaut.", 
    deleteThisProfile: "Supprimer ce profil", 
    templateApplied: (name, type) => `Modèle '${name}' appliqué aux éditeurs '${type}'.`, 
    cannotApplyTemplate: `Impossible de déterminer à quel éditeur ce modèle s'applique. Veuillez sélectionner un onglet.`, 
    saving: 'Sauvegarde...', 
    profileSaved: (name) => `Profil '${name}' sauvegardé.`, 
    errorSavingProfile: "Erreur lors de la sauvegarde du profil:", 
    cannotDeleteProfile: "Impossible de supprimer ce profil (défaut ou non sélectionné).", 
    confirmProfileDeleteTitle: 'Confirmer la suppression', 
    confirmProfileDeleteBody: (name) => `Êtes-vous sûr de vouloir supprimer définitivement le profil "${name}" ?`, 
    deleteButton: 'Supprimer', 
    profileDeleted: (name) => `Profil "${name}" supprimé.`, 
    errorDeletingProfile: "Erreur lors de la suppression du profil:", 
    clearQueueTitle: 'Vider la file d\'attente', 
    confirmClearQueueBody: (name) => `Êtes-vous sûr de vouloir vider la file "${name}" ? Toutes les tâches en attente seront perdues.`, 
    clearButton: 'Vider', 
    queueCleared: (name) => `La file "${name}" a été vidée.`, 
    promptSaved: 'Modèle de prompt sauvegardé.', 
    selectNotFound: "L'élément select 'available-models-select' est introuvable.", 
    modelListNotFound: "Erreur : Impossible de trouver la liste des modèles.", 
    modelDownloaded: (name) => `Modèle ${name} téléchargé avec succès`, 
    unknownError: 'Erreur inconnue', 
    downloadError: 'Erreur téléchargement', 
    downloadingModel: (name) => `Téléchargement de ${name}...`, 
    noDescription: 'Pas de description.', 
    chooseModel: '-- Choisir un modèle --', 
    noWorkerDetected: 'Aucun worker actif détecté.', 
    tasksNotProcessed: 'Les tâches ne seront pas traitées.', 
    profileNotFound: (id) => `Profil non trouvé: ${id}`, 
    errorLoadingGrids: 'Erreur lors du chargement des grilles.', 
    selectProjectToViewGrids: 'Sélectionnez un projet pour voir ses grilles.', 
    noCustomGrids: 'Aucune grille personnalisée.', 
    confirmDeleteGrid: 'Supprimer cette grille ?', 
    gridDeleted: 'Grille supprimée.', 
    editGridTitle: 'Modifier la Grille', 
    createGridTitle: 'Créer une Nouvelle Grille', 
    invalidJsonFile: 'Veuillez sélectionner un fichier .json valide.', 
    gridImported: 'Grille importée avec succès.', 
    gridNameAndFieldRequired: 'Le nom de la grille et au moins un champ sont requis.', 
    gridSaved: (isUpdate) => `Grille ${isUpdate ? 'mise à jour' : 'créée'} avec succès.`, 
    errorSavingGrid: 'Erreur lors de la sauvegarde de la grille', 
    fieldNamePlaceholder: 'Nom du champ', 
    fieldDescriptionPlaceholder: 'Description (optionnel)', 
};

export const CONFIG = {
    API_BASE_URL: 'http://localhost:8080/api',
    WEBSOCKET_URL: '/',
    LOCAL_STORAGE_LAST_SECTION: 'analylit_last_section',
    COMPACT_MODE_STORAGE: 'compactMode',
};
