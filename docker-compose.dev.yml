# Fichier d'override pour le développement local
# Utilisation: docker compose -f docker-compose.yml -f docker-compose.dev.yml up -d

services:
  nginx:
    image: nginx:1.25-alpine
    container_name: analylit_nginx_dev
    ports:
      - "8080:8080" # Expose Nginx sur le port 8080
    volumes:
      - ./web:/usr/share/nginx/html:ro # Monte le code frontend
      - ./docker/nginx.dev.conf:/etc/nginx/conf.d/default.conf:ro # Monte la configuration Nginx
    depends_on:
      - web
    restart: unless-stopped

  web:
    # Gunicorn en dev avec rechargement à chaud
    command: >
      gunicorn --conf backend/config/gunicorn.conf.py --reload 'backend.manage:app'
    environment:
      FLASK_ENV: development
      FLASK_APP: backend/manage.py
      DB_HOST: test-db
      # ✅ CORRECTION: L'URL de la DB de test doit utiliser le nom du service 'test-db'
      # et non 'analylit_test_db' qui est le nom du conteneur.
      DATABASE_URL: postgresql://analylit_user:strong_password@test-db:5432/analylit_test_db
      PYTHONPATH: /home/appuser/app
    volumes:
      - ./api:/home/appuser/app/api
      - ./backend:/home/appuser/app/backend
      - ./scripts:/home/appuser/app/scripts
      - ./utils:/home/appuser/app/utils
      - ./web:/home/appuser/app/web
      - ./migrations:/home/appuser/app/migrations
      - ./alembic.ini:/home/appuser/app/alembic.ini:ro
      - ./tests:/home/appuser/app/tests
      - ./pytest.ini:/home/appuser/app/pytest.ini:ro
    # On n'expose plus le port 5000 directement, Nginx s'en occupe.
    ports: []

    depends_on:
      test-db:
        condition: service_started
      ollama:
        condition: service_started
      redis:
        condition: service_started

  test-db:
    image: postgres:15-alpine
    container_name: analylit_test_db
    environment:
      POSTGRES_USER: analylit_user
      POSTGRES_PASSWORD: strong_password
      POSTGRES_DB: analylit_test_db
    # On n'a pas besoin d'exposer le port de la base de test à l'hôte
    ports: []
    command:
      [
        "postgres",
        "-c", "default_transaction_isolation=read committed",
        "-c", "log_statement=all"
      ]
    volumes:
      - test_postgres_data:/var/lib/postgresql/data

  worker-fast:
    environment:
      DATABASE_URL: postgresql://analylit_user:strong_password@test-db:5432/analylit_test_db # Assurer la cohérence
      DB_HOST: test-db
    volumes:
      - ./backend:/home/appuser/app/backend
      - ./api:/home/appuser/app/api
      - ./utils:/home/appuser/app/utils
      - ./scripts:/home/appuser/app/scripts
    depends_on:
      test-db:
        condition: service_started
      redis:
        condition: service_started

  worker-default:
    environment:
      DATABASE_URL: postgresql://analylit_user:strong_password@test-db:5432/analylit_test_db # Assurer la cohérence
      DB_HOST: test-db
    volumes:
      - ./backend:/home/appuser/app/backend
      - ./api:/home/appuser/app/api
      - ./utils:/home/appuser/app/utils
      - ./scripts:/home/appuser/app/scripts
    depends_on:
      test-db:
        condition: service_started
      redis:
        condition: service_started

  worker-ai:
    environment:
      DATABASE_URL: postgresql://analylit_user:strong_password@test-db:5432/analylit_test_db # Assurer la cohérence
      DB_HOST: test-db
    volumes:
      - ./backend:/home/appuser/app/backend
      - ./api:/home/appuser/app/api
      - ./utils:/home/appuser/app/utils
      - ./scripts:/home/appuser/app/scripts
    depends_on:
      test-db:
        condition: service_started
      redis:
        condition: service_started
      ollama:
        condition: service_started

  migrate:
    # En dev, on exécute les migrations contre la DB de test
    environment: # Assurer la cohérence
      DATABASE_URL: postgresql://analylit_user:strong_password@test-db:5432/analylit_test_db
      SCHEMA_NAME: analylit_schema
      DB_HOST: test-db
      PYTHONPATH: /home/appuser/app
    volumes:
      - ./api:/home/appuser/app/api
      - ./backend:/home/appuser/app/backend
      - ./scripts:/home/appuser/app/scripts
      - ./utils:/home/appuser/app/utils
      - ./migrations:/home/appuser/app/migrations
      - ./alembic.ini:/home/appuser/app/alembic.ini:ro
      - ./scripts/entrypoint.sh:/home/appuser/app/entrypoint.sh:ro
    depends_on:
      test-db:
        condition: service_started

volumes:
  test_postgres_data:
