# Fichier d'override pour le d√©veloppement local
# Utilisation: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up

# ‚úÖ OPTIMISATION: Utilisation des profils pour s√©parer les services.
# Le profil "dev" inclut les services et configurations sp√©cifiques au d√©veloppement.

services:
  web:
    # ‚úÖ DEV MODE: Utiliser le serveur de d√©veloppement Flask avec rechargement automatique.
    command: >
      bash -c "echo 'üîß D√©marrage en mode D√âVELOPPEMENT...' &&
               flask run --host=0.0.0.0 --port=5000"
    environment:
      # ‚úÖ OPTIMISATION: Utiliser FLASK_DEBUG=1 est la m√©thode moderne pour activer le mode debug et le rechargement automatique.
      - FLASK_DEBUG=1
    volumes:
      # Monter le code source pour le rechargement √† chaud
      - ./api:/home/appuser/app/api
      - ./backend:/home/appuser/app/backend
      - ./scripts:/home/appuser/app/scripts
      - ./utils:/home/appuser/app/utils
      - ./web:/home/appuser/app/web
      - ./migrations:/home/appuser/app/migrations
      - ./alembic.ini:/home/appuser/app/alembic.ini
      - ./pytest.ini:/home/appuser/app/pytest.ini
    # En mode dev, on attend aussi la base de test
    depends_on:
      test-db:
        condition: service_started

  test-db:
    image: postgres:15-alpine
    container_name: analylit_test_db
    environment:
      POSTGRES_USER: analylit_user
      POSTGRES_PASSWORD: strong_password
      POSTGRES_DB: analylit_test_db # Base s√©par√©e pour tests
    # La valeur correcte est "read committed" avec un espace.
    # L'utilisation de la liste garantit que les guillemets sont correctement interpr√©t√©s.
    command: ["postgres", "-c", "default_transaction_isolation=read committed", "-c", "log_statement=all"]
    tmpfs:
      - /var/lib/postgresql/data # Base temporaire en RAM
    # Ce service ne sera d√©marr√© qu'avec le profil "dev"
    profiles:
      - dev

  worker-fast:
    volumes:
      - ./backend:/home/appuser/app/backend
      - ./api:/home/appuser/app/api
      - ./utils:/home/appuser/app/utils

  worker-default:
    volumes:
      - ./backend:/home/appuser/app/backend
      - ./api:/home/appuser/app/api
      - ./utils:/home/appuser/app/utils

  worker-ai:
    volumes:
      - ./backend:/home/appuser/app/backend
      - ./api:/home/appuser/app/api
      - ./utils:/home/appuser/app/utils

  migrate:
    # En mode dev, on veut aussi que migrate utilise les derniers fichiers locaux
    volumes:
      - ./api:/home/appuser/app/api
      - ./backend:/home/appuser/app/backend
      - ./scripts:/home/appuser/app/scripts
      - ./utils:/home/appuser/app/utils
      - ./migrations:/home/appuser/app/migrations
      - ./alembic.ini:/home/appuser/app/alembic.ini
      - ./scripts/entrypoint.sh:/home/appuser/app/entrypoint.sh # ‚úÖ CORRECTION: Utiliser le bon chemin source pour le script.
    depends_on:
      test-db:
        condition: service_started